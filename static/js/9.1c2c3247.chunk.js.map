{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","containers/Dashboard/ContractManager/propTypes.js","containers/Dashboard/ContractManager/ProfileContainer/logic.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","containers/Dashboard/ContractManager/ProfileContainer/index.js","containers/Dashboard/ContractManager/ProfileContainer/ProfileContainer.js","containers/Dashboard/ContractManager/ActionContainer/propTypes.js","containers/Dashboard/ContractManager/ActionContainer/ActionContainer.js","containers/Dashboard/ContractManager/ActionContainer/index.js","containers/Dashboard/ContractManager/ActionContainer/styles.js","containers/Dashboard/ContractManager/ContractManager.js","containers/Dashboard/ContractManager/index.js","containers/Dashboard/ContractManager/styles.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","PropTypes","object","isRequired","oneTimeComputeTokenAgeDistribution","stakeList","tokenAgeList","onSetTokenAgeList","isLoaded","tokenAgeMap","Map","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","stake","balance","day","Moment","diff","unix","claimedAt","set","get","Math","round","updatedTokenAgeList","max","from","keys","push","ProfileContainer","useWeb3React","library","deactivate","language","useSelector","state","settings","stakingContract","staking","contract","feeContract","fee","totalStake","yourStake","feeStats","isShowDollar","walletAddress","dispatch","useDispatch","getTotalStake","useCallback","stakingGetTotalStake","getStakeList","stakingGetStakeList","getYourStake","stakingGetYourStake","getFeeStats","feeGetFeeStats","logout","_walletID","settingsLogout","setIsShowPrice","_isShowPrice","settingsShowDollar","useState","setTokenAgeList","yourShare","setYourShare","yourTokenAge","setYourTokenAge","messages","languageProvider","useEffect","onGetTotalStake","isLoading","oneTimeFetchTotalStake","onGetStakeList","oneTimeFetchAllStake","onGetYourStake","fetchYourStake","onSetYourShare","onSetYourTokenAge","totalPoint","today","updatedYourTokenAge","yourPoint","forEach","_stake","BigNumber","toFixed","computeYourShareAndYourTokenAge","onGetFeeStats","oneTimeFetchTotalReward","feesTotal","remainingReward","stakeTotal","pendingReward","share","tokenAge","onEditAddress","onLogout","isChartLoading","loopringPrice","price","onSetIsShowDollar","ActionContainer","walletID","tokenContract","token","allowance","approve","claim","withdraw","getAllowance","tokenGetAllowance","getBalance","tokenGetBalance","doApprove","amount","tokenDoApprove","doStake","stakingDoStake","doClaim","stakingDoClaim","doWithdraw","stakingDoWithdraw","onApprove","onStake","isLocked","onClaim","onWithdraw","withdrawTime","withdrawalWaitTime","claimTime","rewardWaitTime","ContractManager","href","target","rel","style","color","Grid","container","spacing","item","xs","lg","exact","to"],"mappings":"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","file":"static/js/9.1c2c3247.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import { PropTypes } from 'prop-types';\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default propTypes;\n","import Moment from 'moment';\nimport BigNumber from 'bignumber.js';\n\n// Fetch the total amount stake in staking pool only if not already done\nexport const oneTimeFetchTotalStake = (stakingContract, totalStake, onGetTotalStake) => {\n  if (!!stakingContract && !totalStake.isLoaded && !totalStake.isLoading) onGetTotalStake();\n};\n\n// Fetch all user stake in staking pool only if not already done\n// will be used to compute chart of token age distribution and your share of reward\nexport const oneTimeFetchAllStake = (stakingContract, library, stakeList, onGetStakeList) => {\n  if (!!stakingContract && !!library\n    && !stakeList.isLoaded && !stakeList.isLoading) onGetStakeList();\n};\n\n// Compute token age distribution\nexport const oneTimeComputeTokenAgeDistribution = (stakeList, tokenAgeList, onSetTokenAgeList) => {\n  if (!stakeList.isLoaded || !!tokenAgeList) return;\n  const tokenAgeMap = new Map();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const stake of stakeList.value) {\n    // eslint-disable-next-line no-continue\n    if (stake.balance === '0') continue;\n    const today = Moment();\n    const day = today.diff(Moment.unix(stake.claimedAt), 'day');\n    tokenAgeMap.set(day, (tokenAgeMap.get(day) || 0) + Math.round(stake.balance / (10 ** 18)));\n  }\n\n  const updatedTokenAgeList = [];\n  const oldestDay = Math.max(...Array.from(tokenAgeMap.keys()));\n  for (let i = oldestDay; i >= 0; i -= 1) {\n    if (!updatedTokenAgeList.length) {\n      updatedTokenAgeList.push((tokenAgeMap.get(i) || 0));\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    updatedTokenAgeList.push((tokenAgeMap.get(i) || 0)\n      + updatedTokenAgeList[updatedTokenAgeList.length - 1]);\n  }\n  onSetTokenAgeList(updatedTokenAgeList);\n};\n\n// Fetch your own stake every time you sign in\nexport const fetchYourStake = (stakingContract, yourStake, walletAddress, onGetYourStake) => {\n  if (!!stakingContract && !yourStake.isLoaded\n    && !yourStake.isLoading && !!walletAddress.value) onGetYourStake();\n};\n\n// Compute your share of reward and your token age based on your stake and the stake of everyone\nexport const computeYourShareAndYourTokenAge = (stakeList, yourStake, yourShare, yourTokenAge,\n  onSetYourShare, onSetYourTokenAge) => {\n  if (!stakeList.isLoaded || !yourStake.isLoaded) return;\n\n  let totalPoint = 0;\n  const today = Moment();\n  const updatedYourTokenAge = today.diff(Moment.unix(yourStake.value.claimedAt), 'hour') / 24;\n  const yourPoint = (yourStake.value.balance / (10 ** 18)) * updatedYourTokenAge;\n  if (yourPoint > 0) {\n    stakeList.value.forEach((_stake) => {\n      totalPoint += (_stake.balance / (10 ** 18)) * (today.diff(Moment.unix(_stake.claimedAt), 'hour') / 24);\n    });\n  }\n  const updatedYourShare = new BigNumber(!yourPoint ? 0\n    : (yourPoint / totalPoint) * 100).toFixed(4);\n  onSetYourShare(updatedYourShare || 0);\n  onSetYourTokenAge(!yourPoint ? 0 : updatedYourTokenAge);\n};\n\n// Fetch the total reward in fees pool only if not already done\nexport const oneTimeFetchTotalReward = (feeContract, feeStats, onGetFeeStats) => {\n  if (!!feeContract && !feeStats.isLoaded && !feeStats.isLoading) onGetFeeStats();\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import ProfileContainer from './ProfileContainer';\n\nexport default ProfileContainer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWeb3React } from '@web3-react/core';\n\nimport extProps from './propTypes';\nimport languageProvider from '../../../../translations';\nimport { Profile } from '../../../../components';\nimport { settingsLogout, settingsShowDollar } from '../../../../redux/features/settings/action';\nimport {\n  computeYourShareAndYourTokenAge,\n  fetchYourStake,\n  oneTimeComputeTokenAgeDistribution,\n  oneTimeFetchAllStake, oneTimeFetchTotalReward,\n  oneTimeFetchTotalStake,\n} from './logic';\nimport {\n  stakingGetStakeList,\n  stakingGetTotalStake,\n  stakingGetYourStake,\n} from '../../../../redux/features/staking/action';\nimport { feeGetFeeStats } from '../../../../redux/features/fee/action';\n\n/*\n *\n * Display all the information about user stack\n *\n */\n\nconst ProfileContainer = () => {\n  const { library, deactivate } = useWeb3React();\n  const language = useSelector((state) => state.settings.language);\n  const stakingContract = useSelector((state) => state.staking.contract);\n  const feeContract = useSelector((state) => state.fee.contract);\n  const totalStake = useSelector((state) => state.staking.totalStake);\n  const stakeList = useSelector((state) => state.staking.stakeList);\n  const yourStake = useSelector((state) => state.staking.yourStake);\n  const feeStats = useSelector((state) => state.fee.feeStats);\n  const isShowDollar = useSelector((state) => state.settings.isShowDollar);\n  const walletAddress = useSelector((state) => state.settings.walletAddress);\n  const dispatch = useDispatch();\n  const getTotalStake = useCallback(() => dispatch(\n    stakingGetTotalStake(stakingContract),\n  ), [dispatch, stakingContract]);\n  const getStakeList = useCallback(() => dispatch(\n    stakingGetStakeList(stakingContract, library),\n  ),\n  [dispatch, stakingContract, library]);\n  const getYourStake = useCallback(() => dispatch(\n    stakingGetYourStake(stakingContract, walletAddress.value),\n  ),\n  [dispatch, stakingContract, walletAddress]);\n  const getFeeStats = useCallback(() => dispatch(\n    feeGetFeeStats(feeContract),\n  ), [dispatch, feeContract]);\n  const logout = useCallback((_walletID) => dispatch(\n    settingsLogout(deactivate, _walletID),\n  ), [dispatch, deactivate]);\n  const setIsShowPrice = useCallback((_isShowPrice) => dispatch(\n    settingsShowDollar(_isShowPrice),\n  ), [dispatch]);\n  const [tokenAgeList, setTokenAgeList] = useState(null);\n  const [yourShare, setYourShare] = useState(null);\n  const [yourTokenAge, setYourTokenAge] = useState(null);\n\n  const messages = languageProvider[language];\n\n  useEffect(() => {\n    oneTimeFetchTotalStake(stakingContract, totalStake, getTotalStake);\n  }, [stakingContract, totalStake, getTotalStake]);\n\n  useEffect(() => {\n    oneTimeFetchAllStake(stakingContract, library, stakeList, getStakeList);\n  }, [stakingContract, library, stakeList, getStakeList]);\n\n  useEffect(() => {\n    oneTimeComputeTokenAgeDistribution(stakeList, tokenAgeList, setTokenAgeList);\n  }, [stakeList, tokenAgeList, setTokenAgeList]);\n\n  useEffect(() => {\n    fetchYourStake(stakingContract, yourStake, walletAddress, getYourStake);\n  }, [stakingContract, yourStake, walletAddress, getYourStake]);\n\n  useEffect(() => {\n    computeYourShareAndYourTokenAge(stakeList, yourStake, yourShare,\n      yourTokenAge, setYourShare, setYourTokenAge);\n  }, [stakeList, yourStake, yourShare, yourTokenAge, setYourShare, setYourTokenAge]);\n\n  useEffect(() => {\n    oneTimeFetchTotalReward(feeContract, feeStats, getFeeStats);\n  }, [feeContract, feeStats, getFeeStats]);\n\n  return (\n    <Profile\n      messages={messages}\n      feesTotal={(feeStats.value.remainingReward || 0) / (10 ** 18)}\n      stakeTotal={totalStake.value.balance / (10 ** 18)}\n      stake={(yourStake.value.balance || 0) / (10 ** 18)}\n      pendingReward={(yourStake.value.pendingReward) / (10 ** 18)}\n      share={yourShare || 0}\n      tokenAge={yourTokenAge || 0}\n      walletAddress={walletAddress.value}\n      tokenAgeList={tokenAgeList || []}\n      onEditAddress={() => logout(1)}\n      onLogout={() => logout(0)}\n      isLoading={!feeStats.isLoaded || !totalStake.isLoaded || !yourStake.isLoaded}\n      isChartLoading={!stakeList.isLoaded}\n      isShowDollar={(isShowDollar || { value: false }).value}\n      loopringPrice={(isShowDollar || { price: 0 }).price}\n      onSetIsShowDollar={setIsShowPrice}\n    />\n  );\n};\n\nProfileContainer.propTypes = extProps;\n\nexport default ProfileContainer;\n","import { PropTypes } from 'prop-types';\n\nconst propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default propTypes;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport extProps from './propTypes';\nimport languageProvider from '../../../../translations';\nimport { Action } from '../../../../components';\nimport { tokenDoApprove, tokenGetAllowance, tokenGetBalance } from '../../../../redux/features/token/action';\nimport { stakingDoStake, stakingDoClaim, stakingDoWithdraw } from '../../../../redux/features/staking/action';\n\n/*\n *\n * Display all action to interact with staking pool\n * Stake(deposit), claim, withdraw\n *\n */\n\nconst ActionContainer = () => {\n  const language = useSelector((state) => state.settings.language);\n  const walletID = useSelector((state) => state.settings.walletID);\n  const stakingContract = useSelector((state) => state.staking.contract);\n  const tokenContract = useSelector((state) => state.token.contract);\n  const walletAddress = useSelector((state) => state.settings.walletAddress);\n  const yourStake = useSelector((state) => state.staking.yourStake);\n  const allowance = useSelector((state) => state.token.allowance);\n  const balance = useSelector((state) => state.token.balance);\n  const approve = useSelector((state) => state.token.approve);\n  const stake = useSelector((state) => state.staking.stake);\n  const claim = useSelector((state) => state.staking.claim);\n  const withdraw = useSelector((state) => state.staking.withdraw);\n  const dispatch = useDispatch();\n  const getAllowance = useCallback(() => dispatch(\n    tokenGetAllowance(tokenContract, walletAddress.value),\n  ), [dispatch, walletAddress, tokenContract]);\n  const getBalance = useCallback(() => dispatch(\n    tokenGetBalance(tokenContract, walletAddress.value),\n  ), [dispatch, walletAddress, tokenContract]);\n  const doApprove = useCallback((amount) => dispatch(\n    tokenDoApprove(tokenContract, walletAddress.value, amount),\n  ),\n  [dispatch, walletAddress, tokenContract]);\n  const doStake = useCallback((amount) => dispatch(\n    stakingDoStake(stakingContract, walletAddress.value, amount),\n  ),\n  [dispatch, walletAddress, stakingContract]);\n  const doClaim = useCallback(() => dispatch(\n    stakingDoClaim(stakingContract, walletAddress.value),\n  ),\n  [dispatch, walletAddress, stakingContract]);\n  const doWithdraw = useCallback((amount) => dispatch(\n    stakingDoWithdraw(stakingContract, walletAddress.value, amount),\n  ),\n  [dispatch, walletAddress, stakingContract]);\n\n  // Fetch the allowance(how much can be transferred to staking pool) only one time\n  useEffect(() => {\n    if (!!tokenContract && walletAddress.value\n      && !allowance.isLoading && !allowance.isLoaded) getAllowance();\n  }, [tokenContract, walletAddress, allowance, getAllowance]);\n\n  // Fetch the amount of LRC in wallet only one time\n  useEffect(() => {\n    if (!!tokenContract && walletAddress.value\n      && !balance.isLoading && !balance.isLoaded) getBalance();\n  }, [tokenContract, walletAddress, balance, getBalance]);\n\n  const messages = languageProvider[language];\n\n  return (\n    <Action\n      messages={messages}\n      allowance={allowance}\n      balance={balance}\n      onApprove={doApprove}\n      approve={approve}\n      stake={stake}\n      onStake={doStake}\n      isLocked={walletID === 1}\n      claim={claim}\n      withdraw={withdraw}\n      onClaim={doClaim}\n      onWithdraw={doWithdraw}\n      pendingReward={(yourStake.value.pendingReward || 0) / (10 ** 18)}\n      yourStake={(yourStake.value.balance || 0) / (10 ** 18)}\n      withdrawTime={yourStake.value.withdrawalWaitTime || 90 * 24 * 60 * 60}\n      claimTime={yourStake.value.rewardWaitTime || 90 * 24 * 60 * 60}\n    />\n  );\n};\n\nActionContainer.propTypes = extProps;\n\nexport default ActionContainer;\n","import { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport ActionContainer from './ActionContainer';\n\nexport default withStyles(styles)(ActionContainer);\n","export default () => ({\n\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWeb3React } from '@web3-react/core';\nimport { Card, Grid } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\nimport languageProvider from '../../../translations';\nimport extProps from './propTypes';\nimport { SuspenseLoading } from '../../../components';\nimport ProfileContainer from './ProfileContainer';\nimport Action from './ActionContainer';\n\n/*\n *\n * Display profile containing all basic information about stake user\n * and action available with the staking pool\n * Check if wallet is active and if all contract are loaded\n *\n */\n\nconst ContractManager = () => {\n  const language = useSelector((state) => state.settings.language);\n  const stakingContract = useSelector((state) => state.staking.contract);\n  const feeContract = useSelector((state) => state.fee.contract);\n  const tokenContract = useSelector((state) => state.token.contract);\n  const walletAddress = useSelector((state) => state.settings.walletAddress);\n  const { library } = useWeb3React();\n\n  const messages = languageProvider[language];\n\n  if (!walletAddress.value || !library) return (<Redirect exact from=\"/\" to=\"/login\" />);\n\n  if (!stakingContract || !feeContract\n    || !tokenContract) return (<SuspenseLoading messages={messages} />);\n\n  return (\n    <Card className=\"card-box mb-4\">\n      <span className=\"ribbon-angle ribbon-angle--top-left ribbon-primary\">\n        <small><a href=\"https://twitter.com/NolanVanmoortel\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'white' }}>twitter</a></small>\n      </span>\n      <Grid container spacing={4}>\n        <Grid item xs={12} lg={5}>\n          <div className=\"p-4 text-center\">\n            <ProfileContainer />\n          </div>\n        </Grid>\n        <Grid item xs={12} lg={7}>\n          <div className=\"hero-wrapper bg-composed-wrapper h-100 rounded-right bg-secondary\">\n            <div className=\"flex-grow-1 w-100 d-flex align-items-center justify-content-center px-4\">\n              <Action />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nContractManager.propTypes = extProps;\n\nexport default ContractManager;\n","import { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport ContractManager from './ContractManager';\n\nexport default withStyles(styles)(ContractManager);\n","export default () => ({\n\n});\n"],"sourceRoot":""}